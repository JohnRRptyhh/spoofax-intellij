<!--
  ~ Copyright Â© 2015-2016
  ~
  ~ This file is part of Spoofax for IntelliJ.
  ~
  ~ Spoofax for IntelliJ is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Lesser General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ Spoofax for IntelliJ is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public License
  ~ along with Spoofax for IntelliJ.  If not, see <http://www.gnu.org/licenses/>.
  -->

<idea-plugin version="2">
    <id>org.metaborg.spoofax.intellij.idea</id>
    <name>Spoofax</name>
    <version>1.5.0-SNAPSHOT</version>
    <vendor email="info@metaborg.org" url="http://www.metaborg.org/intellij/">Metaborg</vendor>

    <description><![CDATA[
      Spoofax plugin for IntelliJ IDEA.
    ]]></description>

    <change-notes><![CDATA[
      Bug fixes and improvements.
    ]]>
    </change-notes>

    <!-- See http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html -->
    <idea-version since-build="143"/>

    <extensions defaultExtensionNs="com.intellij">
        <compiler.buildTargetScopeProvider implementation="org.metaborg.intellij.jps.builders.SpoofaxBuildTargetScopeProvider" />
        <facetType implementation="org.metaborg.intellij.idea.facets.MetaborgFacetType" />
        <sdkType implementation="org.metaborg.intellij.idea.sdks.MetaborgSdkType"/>
        <moduleType id="METABORG_MODULE" implementationClass="org.metaborg.intellij.idea.projects.MetaborgModuleType"/>
        <frameworkSupport implementation="org.metaborg.intellij.idea.facets.MetaborgFacetFrameworkSupport"/>
        <projectStructureDetector implementation="org.metaborg.intellij.idea.projects.newproject.MetaborgProjectDetector"/>
        <fileTypeFactory implementation="org.metaborg.intellij.idea.filetypes.MetaborgFileTypeFactory"/>
        <moduleConfigurationEditorProvider implementation="org.metaborg.intellij.idea.gui.modulesettings.MetaborgModuleConfigurationEditorProvider"/>
        <lang.elementManipulator forClass="org.metaborg.intellij.idea.parsing.elements.SpoofaxIdentifier" implementationClass="org.metaborg.intellij.idea.parsing.references.SpoofaxIdentifierManipulator"/>
        <psi.referenceContributor implementation="org.metaborg.intellij.idea.parsing.references.MetaborgReferenceContributor"/>
        <projectConfigurable id="metaborg.project.language.settings" groupId="language" instance="org.metaborg.intellij.idea.gui.languagesettings.MetaborgProjectLanguagesSettings" />
        <applicationService serviceInterface="org.metaborg.intellij.configuration.IMetaborgApplicationConfig" serviceImplementation="org.metaborg.intellij.idea.configuration.IdeaMetaborgApplicationConfig" />
        <projectService serviceInterface="org.metaborg.intellij.configuration.IMetaborgProjectConfig" serviceImplementation="org.metaborg.intellij.idea.configuration.IdeaMetaborgProjectConfig" />
        <moduleService serviceInterface="org.metaborg.intellij.configuration.IMetaborgModuleConfig" serviceImplementation="org.metaborg.intellij.idea.configuration.IdeaMetaborgModuleConfig" />
        <compileServer.plugin classpath="./classes/;../classes/jpslib/slf4j-api-1.7.12.jar;org.metaborg.intellij.deps-2.0.0-SNAPSHOT.jar"/>
    </extensions>

    <application-components>
        <component>
            <implementation-class>org.metaborg.intellij.idea.IdeaApplicationComponent</implementation-class>
        </component>
    </application-components>

    <project-components>
        <component>
            <implementation-class>org.metaborg.intellij.idea.IdeaProjectComponent</implementation-class>
        </component>
    </project-components>

    <module-components>
        <component>
            <implementation-class>org.metaborg.intellij.idea.IdeaModuleComponent</implementation-class>
        </component>
    </module-components>

    <actions>
    </actions>
</idea-plugin>